!function(){"use strict";try{self["workbox:core:4.3.1"]&&_()}catch(e){}const e=(e,...t)=>{let s=e;return t.length>0&&(s+=` :: ${JSON.stringify(t)}`),s};class t extends Error{constructor(t,s){super(e(t,s)),this.name=t,this.details=s}}try{self["workbox:routing:4.3.1"]&&_()}catch(e){}const s=e=>e&&"object"==typeof e?e:{handle:e};class n{constructor(e,t,n){this.handler=s(t),this.match=e,this.method=n||"GET"}}class r extends n{constructor(e,t,s){super(({url:t})=>{const s=e.exec(t.href);return s?t.origin!==location.origin&&0!==s.index?null:s.slice(1):null},t,s)}}const a={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:self.registration.scope},o=e=>[a.prefix,e,a.suffix].filter(e=>e.length>0).join("-"),i=e=>e||o(a.precache),c=e=>e||o(a.runtime),h=e=>{const t=new URL(e,location);return t.origin===location.origin?t.pathname:t.href};class u{constructor(){this._routes=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,s=this.handleRequest({request:t,event:e});s&&e.respondWith(s)})}addCacheListener(){self.addEventListener("message",async e=>{if(e.data&&"CACHE_URLS"===e.data.type){const{payload:t}=e.data,s=Promise.all(t.urlsToCache.map(e=>{"string"==typeof e&&(e=[e]);const t=new Request(...e);return this.handleRequest({request:t})}));e.waitUntil(s),e.ports&&e.ports[0]&&(await s,e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const s=new URL(e.url,location);if(!s.protocol.startsWith("http"))return;let n,{params:r,route:a}=this.findMatchingRoute({url:s,request:e,event:t}),o=a&&a.handler;if(!o&&this._defaultHandler&&(o=this._defaultHandler),o){try{n=o.handle({url:s,request:e,event:t,params:r})}catch(e){n=Promise.reject(e)}return n&&this._catchHandler&&(n=n.catch(e=>this._catchHandler.handle({url:s,event:t,err:e}))),n}}findMatchingRoute({url:e,request:t,event:s}){const n=this._routes.get(t.method)||[];for(const r of n){let n,a=r.match({url:e,request:t,event:s});if(a)return(Array.isArray(a)&&a.length>0||a.constructor===Object&&Object.keys(a).length>0)&&(n=a),{route:r,params:n}}return{}}setDefaultHandler(e){this._defaultHandler=s(e)}setCatchHandler(e){this._catchHandler=s(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new t("unregister-route-but-not-found-with-method",{method:e.method});const s=this._routes.get(e.method).indexOf(e);if(!(s>-1))throw new t("unregister-route-route-not-registered");this._routes.get(e.method).splice(s,1)}}let l;const p=()=>(l||(l=new u,l.addFetchListener(),l.addCacheListener()),l),d=(e,s,a="GET")=>{let o;if("string"==typeof e){const t=new URL(e,location);o=new n(({url:e})=>e.href===t.href,s,a)}else if(e instanceof RegExp)o=new r(e,s,a);else if("function"==typeof e)o=new n(e,s,a);else{if(!(e instanceof n))throw new t("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});o=e}return p().registerRoute(o),o},f=new Set;const g="cacheDidUpdate",w="cacheKeyWillBeUsed",m="cacheWillUpdate",y="cachedResponseWillBeUsed",v="fetchDidFail",q="fetchDidSucceed",R="requestWillFetch",U=(e,t)=>e.filter(e=>t in e),N=async({cacheName:e,request:t,event:s,matchOptions:n,plugins:r=[]})=>{const a=await caches.open(e),o=await k({plugins:r,request:t,mode:"read"});let i=await a.match(o,n);for(const t of r)y in t&&(i=await t[y].call(t,{cacheName:e,event:s,matchOptions:n,cachedResponse:i,request:o}));return i},b=async({request:e,response:t,event:s,plugins:n})=>{let r=t,a=!1;for(let t of n)if(m in t&&(a=!0,r=await t[m].call(t,{request:e,response:r,event:s}),!r))break;return a||(r=200===r.status?r:null),r||null},k=async({request:e,mode:t,plugins:s})=>{const n=U(s,w);let r=e;for(const e of n)r=await e[w].call(e,{mode:t,request:r}),"string"==typeof r&&(r=new Request(r));return r},O={put:async({cacheName:e,request:s,response:n,event:r,plugins:a=[],matchOptions:o}={})=>{const i=await k({plugins:a,request:s,mode:"write"});if(!n)throw new t("cache-put-with-no-response",{url:h(i.url)});let c=await b({event:r,plugins:a,response:n,request:i});if(!c)return;const u=await caches.open(e),l=U(a,g);let p=l.length>0?await N({cacheName:e,matchOptions:o,request:i}):null;try{await u.put(i,c)}catch(e){throw"QuotaExceededError"===e.name&&await async function(){for(const e of f)await e()}(),e}for(let t of l)await t[g].call(t,{cacheName:e,event:r,oldResponse:p,newResponse:c,request:i})},match:N},L=async({request:e,fetchOptions:s,event:n,plugins:r=[]})=>{if(n&&n.preloadResponse){const e=await n.preloadResponse;if(e)return e}"string"==typeof e&&(e=new Request(e));const a=U(r,v),o=a.length>0?e.clone():null;try{for(let t of r)R in t&&(e=await t[R].call(t,{request:e.clone(),event:n}))}catch(e){throw new t("plugin-error-request-will-fetch",{thrownError:e})}let i=e.clone();try{let t;t="navigate"===e.mode?await fetch(e):await fetch(e,s);for(const e of r)q in e&&(t=await e[q].call(e,{event:n,request:i,response:t}));return t}catch(e){for(const t of a)await t[v].call(t,{error:e,event:n,originalRequest:o.clone(),request:i.clone()});throw e}};try{self["workbox:strategies:4.3.1"]&&_()}catch(e){}const j={cacheWillUpdate:({response:e})=>200===e.status||0===e.status?e:null};class T{constructor(e,t,{onupgradeneeded:s,onversionchange:n=this._onversionchange}={}){this._name=e,this._version=t,this._onupgradeneeded=s,this._onversionchange=n,this._db=null}get db(){return this._db}async open(){if(!this._db)return this._db=await new Promise((e,t)=>{let s=!1;setTimeout(()=>{s=!0,t(new Error("The open request was blocked and timed out"))},this.OPEN_TIMEOUT);const n=indexedDB.open(this._name,this._version);n.onerror=()=>t(n.error),n.onupgradeneeded=e=>{s?(n.transaction.abort(),e.target.result.close()):this._onupgradeneeded&&this._onupgradeneeded(e)},n.onsuccess=({target:t})=>{const n=t.result;s?n.close():(n.onversionchange=this._onversionchange.bind(this),e(n))}}),this}async getKey(e,t){return(await this.getAllKeys(e,t,1))[0]}async getAll(e,t,s){return await this.getAllMatching(e,{query:t,count:s})}async getAllKeys(e,t,s){return(await this.getAllMatching(e,{query:t,count:s,includeKeys:!0})).map(({key:e})=>e)}async getAllMatching(e,{index:t,query:s=null,direction:n="next",count:r,includeKeys:a}={}){return await this.transaction([e],"readonly",(o,i)=>{const c=o.objectStore(e),h=t?c.index(t):c,u=[];h.openCursor(s,n).onsuccess=({target:e})=>{const t=e.result;if(t){const{primaryKey:e,key:s,value:n}=t;u.push(a?{primaryKey:e,key:s,value:n}:n),r&&u.length>=r?i(u):t.continue()}else i(u)}})}async transaction(e,t,s){return await this.open(),await new Promise((n,r)=>{const a=this._db.transaction(e,t);a.onabort=({target:e})=>r(e.error),a.oncomplete=()=>n(),s(a,e=>n(e))})}async _call(e,t,s,...n){return await this.transaction([t],s,(s,r)=>{s.objectStore(t)[e](...n).onsuccess=({target:e})=>{r(e.result)}})}_onversionchange(){this.close()}close(){this._db&&(this._db.close(),this._db=null)}}T.prototype.OPEN_TIMEOUT=2e3;const x={readonly:["get","count","getKey","getAll","getAllKeys"],readwrite:["add","put","clear","delete"]};for(const[e,t]of Object.entries(x))for(const s of t)s in IDBObjectStore.prototype&&(T.prototype[s]=async function(t,...n){return await this._call(s,t,e,...n)});try{self.workbox.v=self.workbox.v||{}}catch(e){}try{self["workbox:precaching:4.3.1"]&&_()}catch(e){}const C=[],K={get:()=>C,add(e){C.push(...e)}};function E(e){if(!e)throw new t("add-to-cache-list-unexpected-type",{entry:e});if("string"==typeof e){const t=new URL(e,location);return{cacheKey:t.href,url:t.href}}const{revision:s,url:n}=e;if(!n)throw new t("add-to-cache-list-unexpected-type",{entry:e});if(!s){const e=new URL(n,location);return{cacheKey:e.href,url:e.href}}const r=new URL(n,location),a=new URL(n,location);return a.searchParams.set("__WB_REVISION__",s),{cacheKey:a.href,url:r.href}}class P{constructor(e){this._cacheName=i(e),this._urlsToCacheKeys=new Map}addToCacheList(e){for(const s of e){const{cacheKey:e,url:n}=E(s);if(this._urlsToCacheKeys.has(n)&&this._urlsToCacheKeys.get(n)!==e)throw new t("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(n),secondEntry:e});this._urlsToCacheKeys.set(n,e)}}async install({event:e,plugins:t}={}){const s=[],n=[],r=await caches.open(this._cacheName),a=await r.keys(),o=new Set(a.map(e=>e.url));for(const e of this._urlsToCacheKeys.values())o.has(e)?n.push(e):s.push(e);const i=s.map(s=>this._addURLToCache({event:e,plugins:t,url:s}));return await Promise.all(i),{updatedURLs:s,notUpdatedURLs:n}}async activate(){const e=await caches.open(this._cacheName),t=await e.keys(),s=new Set(this._urlsToCacheKeys.values()),n=[];for(const r of t)s.has(r.url)||(await e.delete(r),n.push(r.url));return{deletedURLs:n}}async _addURLToCache({url:e,event:s,plugins:n}){const r=new Request(e,{credentials:"same-origin"});let a,o=await L({event:s,plugins:n,request:r});for(const e of n||[])"cacheWillUpdate"in e&&(a=e.cacheWillUpdate.bind(e));if(!(a?a({event:s,request:r,response:o}):o.status<400))throw new t("bad-precaching-response",{url:e,status:o.status});o.redirected&&(o=await async function(e){const t=e.clone(),s="body"in t?Promise.resolve(t.body):t.blob(),n=await s;return new Response(n,{headers:t.headers,status:t.status,statusText:t.statusText})}(o)),await O.put({event:s,plugins:n,request:r,response:o,cacheName:this._cacheName,matchOptions:{ignoreSearch:!0}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location);return this._urlsToCacheKeys.get(t.href)}}let M;const S=()=>(M||(M=new P),M);const W=(e,t)=>{const s=S().getURLsToCacheKeys();for(const n of function*(e,{ignoreURLParametersMatching:t,directoryIndex:s,cleanURLs:n,urlManipulation:r}={}){const a=new URL(e,location);a.hash="",yield a.href;const o=function(e,t){for(const s of[...e.searchParams.keys()])t.some(e=>e.test(s))&&e.searchParams.delete(s);return e}(a,t);if(yield o.href,s&&o.pathname.endsWith("/")){const e=new URL(o);e.pathname+=s,yield e.href}if(n){const e=new URL(o);e.pathname+=".html",yield e.href}if(r){const e=r({url:a});for(const t of e)yield t.href}}(e,t)){const e=s.get(n);if(e)return e}};let A=!1;const F=e=>{A||((({ignoreURLParametersMatching:e=[/^utm_/],directoryIndex:t="index.html",cleanURLs:s=!0,urlManipulation:n=null}={})=>{const r=i();addEventListener("fetch",a=>{const o=W(a.request.url,{cleanURLs:s,directoryIndex:t,ignoreURLParametersMatching:e,urlManipulation:n});if(!o)return;let i=caches.open(r).then(e=>e.match(o)).then(e=>e||fetch(o));a.respondWith(i)})})(e),A=!0)},I=e=>{const t=S(),s=K.get();e.waitUntil(t.install({event:e,plugins:s}).catch(e=>{throw e}))},H=e=>{const t=S(),s=K.get();e.waitUntil(t.activate({event:e,plugins:s}))};var $;addEventListener("activate",()=>clients.claim()),addEventListener("install",()=>self.skipWaiting()),(e=>{S().addToCacheList(e),e.length>0&&(addEventListener("install",I),addEventListener("activate",H))})(["/"]),F($),d((function(e){var t=e.url;return"/assets/js/service-worker.js"!==t.pathname&&"/service-worker.js"!==t.pathname&&("string"==typeof/\.(?:woff|woff2|png|gif|jpg|jpeg|webp)$/?t.pathname===/\.(?:woff|woff2|png|gif|jpg|jpeg|webp)$/:/\.(?:woff|woff2|png|gif|jpg|jpeg|webp)$/ instanceof RegExp&&/\.(?:woff|woff2|png|gif|jpg|jpeg|webp)$/.test(t.pathname))}),new class{constructor(e={}){this._cacheName=c(e.cacheName),this._plugins=e.plugins||[],this._fetchOptions=e.fetchOptions||null,this._matchOptions=e.matchOptions||null}async handle({event:e,request:t}){return this.makeRequest({event:e,request:t||e.request})}async makeRequest({event:e,request:s}){"string"==typeof s&&(s=new Request(s));let n,r=await O.match({cacheName:this._cacheName,request:s,event:e,matchOptions:this._matchOptions,plugins:this._plugins});if(!r)try{r=await this._getFromNetwork(s,e)}catch(e){n=e}if(!r)throw new t("no-response",{url:s.url,error:n});return r}async _getFromNetwork(e,t){const s=await L({request:e,event:t,fetchOptions:this._fetchOptions,plugins:this._plugins}),n=s.clone(),r=O.put({cacheName:this._cacheName,request:e,response:n,event:t,plugins:this._plugins});if(t)try{t.waitUntil(r)}catch(e){}return s}}({cacheName:"jc.statics"})),d((function(e){var t=e.url;return"/assets/js/service-worker.js"!==t.pathname&&"/service-worker.js"!==t.pathname&&("string"==typeof/\.(?:css|js|json|svg)$/?t.pathname===/\.(?:css|js|json|svg)$/:/\.(?:css|js|json|svg)$/ instanceof RegExp&&/\.(?:css|js|json|svg)$/.test(t.pathname))}),new class{constructor(e={}){if(this._cacheName=c(e.cacheName),e.plugins){let t=e.plugins.some(e=>!!e.cacheWillUpdate);this._plugins=t?e.plugins:[j,...e.plugins]}else this._plugins=[j];this._networkTimeoutSeconds=e.networkTimeoutSeconds,this._fetchOptions=e.fetchOptions||null,this._matchOptions=e.matchOptions||null}async handle({event:e,request:t}){return this.makeRequest({event:e,request:t||e.request})}async makeRequest({event:e,request:s}){const n=[];"string"==typeof s&&(s=new Request(s));const r=[];let a;if(this._networkTimeoutSeconds){const{id:t,promise:o}=this._getTimeoutPromise({request:s,event:e,logs:n});a=t,r.push(o)}const o=this._getNetworkPromise({timeoutId:a,request:s,event:e,logs:n});r.push(o);let i=await Promise.race(r);if(i||(i=await o),!i)throw new t("no-response",{url:s.url});return i}_getTimeoutPromise({request:e,logs:t,event:s}){let n;return{promise:new Promise(t=>{n=setTimeout(async()=>{t(await this._respondFromCache({request:e,event:s}))},1e3*this._networkTimeoutSeconds)}),id:n}}async _getNetworkPromise({timeoutId:e,request:t,logs:s,event:n}){let r,a;try{a=await L({request:t,event:n,fetchOptions:this._fetchOptions,plugins:this._plugins})}catch(e){r=e}if(e&&clearTimeout(e),r||!a)a=await this._respondFromCache({request:t,event:n});else{const e=a.clone(),s=O.put({cacheName:this._cacheName,request:t,response:e,event:n,plugins:this._plugins});if(n)try{n.waitUntil(s)}catch(e){}}return a}_respondFromCache({event:e,request:t}){return O.match({cacheName:this._cacheName,request:t,event:e,matchOptions:this._matchOptions,plugins:this._plugins})}}({cacheName:"jc.build"})),d((function(e){var t=e.url;return"/assets/js/service-worker.js"!==t.pathname&&"/service-worker.js"!==t.pathname&&"/"===t.pathname}),new class{constructor(e={}){if(this._cacheName=c(e.cacheName),this._plugins=e.plugins||[],e.plugins){let t=e.plugins.some(e=>!!e.cacheWillUpdate);this._plugins=t?e.plugins:[j,...e.plugins]}else this._plugins=[j];this._fetchOptions=e.fetchOptions||null,this._matchOptions=e.matchOptions||null}async handle({event:e,request:t}){return this.makeRequest({event:e,request:t||e.request})}async makeRequest({event:e,request:s}){"string"==typeof s&&(s=new Request(s));const n=this._getFromNetwork({request:s,event:e});let r,a=await O.match({cacheName:this._cacheName,request:s,event:e,matchOptions:this._matchOptions,plugins:this._plugins});if(a){if(e)try{e.waitUntil(n)}catch(r){}}else try{a=await n}catch(e){r=e}if(!a)throw new t("no-response",{url:s.url,error:r});return a}async _getFromNetwork({request:e,event:t}){const s=await L({request:e,event:t,fetchOptions:this._fetchOptions,plugins:this._plugins}),n=O.put({cacheName:this._cacheName,request:e,response:s.clone(),event:t,plugins:this._plugins});if(t)try{t.waitUntil(n)}catch(e){}return s}}({cacheName:"jc.fallback"}))}();
